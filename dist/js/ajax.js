"use strict";function ajax(t){if(!t.url)throw new Error("url地址时候必填项");if(!t.callback)throw new Error("callback是必填项");var a={url:t.url,type:t.type||"get",data:t.data||"",async:null==t.async||t.async,callback:t.callback,error:t.error};if("get"!=a.type&&"post"!=a.type)throw new Error("type的值暂时只支持get和post请求");if("[object Object]"!=Object.prototype.toString.call(a.data)&&"[object String]"!=Object.prototype.toString.call(a.data))throw new Error("data参数的数据类型只能为对象和字符串");if(a.data&&"[object String]"==Object.prototype.toString.call(a.data)&&!a.data.includes("="))throw new Error("data的格式不对，字符串的时候必须key=value的格式");if("[object Object]"==Object.prototype.toString.call(a.data)){var r,e="";for(r in a.data)e+=r+"="+a.data[r]+"&";a.data=e.substr(0,e.length-1)}if("[object Function]"!=Object.prototype.toString.call(a.callback))throw new Error("callback的数据类型必须函数");if("[object Boolean]"!=Object.prototype.toString.call(a.async))throw new Error("async的取值只能为布尔值");try{var o=new XMLHttpRequest;if("get"==a.type?(o.open(a.type,a.url+"?"+a.data,a.async),o.send()):(o.open(a.type,a.url,a.async),o.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),o.send(a.data)),!a.async)return void a.callback(o.responseText);o.onload=function(){a.callback(o.responseText)}}catch(t){a.error(t)}}function pAjax(t){return new Promise(function(a,r){ajax({url:t.url,type:t.type,data:t.data,async:t.async,callback:function(t){a(t)},error:function(t){r(t)}})})}